# Aliases
# Autossh port forwards
alias dycpu1-ports="autossh -M 0 -f -T -N dycpu1-ports"
alias dycpu2-ports="autossh -M 0 -f -T -N dycpu2-ports"

# Directories
export PROJECTDIR="$HOME/projects"
export SOFTWAREDIR="$HOME/software"
export DATASETSDIR="$HOME/datasets"

# Load host specific settings. May override above base dirs.
export HOST=`hostname`
if [[ -f ~/.sharedshellrc-$HOST ]]; then
    source ~/.sharedshellrc-$HOST
fi

# Local software
export PATH="$HOME/.local/bin${PATH:+:${PATH}}"
export CPATH="$HOME/.local/include${CPATH:+:${CPATH}}" # cpp searches for include files here (like -I )
export LIBRARY_PATH="$HOME/.local/lib${LIBRARY_PATH:+:${LIBRARY_PATH}}" # link time libraries
export LD_LIBRARY_PATH="$HOME/.local/lib${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}" # run time libraries

# Research data
export NLTK_DATA="$DATASETSDIR/nltk_data"

# NPM
export NPM_PACKAGES="$HOME/.npm"
export PATH="$NPM_PACKAGES/bin${PATH:+:${PATH}}"
unset MANPATH
# $(manpath): /home/leonard/.local/share/man:/usr/share/man
export MANPATH="$NPM_PACKAGES/share/man:$(manpath)"
export NODE_PATH="$NPM_PACKAGES/lib/node_modules${NODE_PATH:+:${NODE_PATH}}"

# Ruby gems
export PATH="/home/leonard/.gem/ruby/2.3.0/bin${PATH:+:${PATH}}"

# Dictionaries
alias ddevil='dict -d devil'
alias wn='dict -d wn'
alias ee='dict -d moby-thesaurus'
alias ed='dict -d fd-eng-deu'
alias de='dict -d fd-deu-eng'
function ze() {
    grep $argv ~/.cedict.txt
}
function zes() {
    grep '^. '$argv ~/.cedict.txt
}
function zed() {
    grep '^.. '$argv ~/.cedict.txt
}

# File sharing via transfer.sh
transfer() { if [ $# -eq 0 ]; then echo -e "No arguments specified. Usage:\necho transfer /tmp/test.md\ncat /tmp/test.md | transfer test.md"; return 1; fi
tmpfile=$( mktemp -t transferXXX ); if tty -s; then basefile=$(basename "$1" | sed -e 's/[^a-zA-Z0-9._-]/-/g'); curl --progress-bar --upload-file "$1" "https://transfer.sh/$basefile" >> $tmpfile; else curl --progress-bar --upload-file "-" "https://transfer.sh/$1" >> $tmpfile ; fi; cat $tmpfile; rm -f $tmpfile; } 

transfer_insecure() { if [ $# -eq 0 ]; then echo -e "No arguments specified. Usage:\necho transfer /tmp/test.md\ncat /tmp/test.md | transfer test.md"; return 1; fi
tmpfile=$( mktemp -t transferXXX ); if tty -s; then basefile=$(basename "$1" | sed -e 's/[^a-zA-Z0-9._-]/-/g'); curl --insecure --progress-bar --upload-file "$1" "https://transfer.sh/$basefile" >> $tmpfile; else curl --insecure --progress-bar --upload-file "-" "https://transfer.sh/$1" >> $tmpfile ; fi; cat $tmpfile; rm -f $tmpfile; } 

# Helper functions
alias wget_website='wget --recursive --no-clobber --page-requisites --html-extension --convert-links --restrict-file-names=windows --no-parent --domains'

# Info pages and manuals
alias info='info --vi-keys'

# Create directories
if [[ ! ( -d ~/.local/bin || -d ~/.local/lib || -d ~/./local/include ) ]]; then
    mkdir -p ~/.local/{bin,lib,include}
fi

alias cdproj="cd $PROJECTDIR"
alias cdsoftware="cd $SOFTWAREDIR"
alias cddata="cd $DATASETSDIR"
# Create directories
for dir in $PROJECTDIR $SOFTWAREDIR $DATASETDIR; do
    if [[ ! -d $dir ]]; then
        mkdir -p $dir
    fi
done
